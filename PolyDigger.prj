<deployment-project plugin="plugin.ezdeploy" plugin-version="1.0">
  <configuration build-checksum="1817198788" file="D:\Matlab\PolyDigger\PolyDigger.prj" location="D:\Matlab\PolyDigger" name="PolyDigger" preferred-package-location="D:\Matlab\PolyDigger\PolyDigger\for_redistribution" preferred-package-type="package.type.exe" target="target.ezdeploy.standalone" target-name="Application Compiler">
    <param.appname>PolyDigger</param.appname>
    <param.icon>${PROJECT_ROOT}\PolyDigger_resources\icon.ico</param.icon>
    <param.icons>
      <file>${PROJECT_ROOT}\PolyDigger_resources\icon_48.png</file>
      <file>${PROJECT_ROOT}\PolyDigger_resources\icon_32.png</file>
      <file>${PROJECT_ROOT}\PolyDigger_resources\icon_24.png</file>
      <file>${PROJECT_ROOT}\PolyDigger_resources\icon_16.png</file>
    </param.icons>
    <param.version>1.0</param.version>
    <param.authnamewatermark>Prakhar Dhama</param.authnamewatermark>
    <param.email>prakhardhama@gmail.com</param.email>
    <param.company>IITR</param.company>
    <param.summary>Implementation of different Computational Geometry algorithms for solving the Art-Gallery Problem.</param.summary>
    <param.description>1. Construct a simple polygon with n vertices. The application take n as input (e.g., 20) from
the user, then randomly generate n distinct points with x and y coordinates in 2D geometry. 

2. Perform Trapezoidalization of the simple polygon obtained above. Obtain Monotone Polygons from the Trapezoidalization of the simple polygon. 

3. For each monotone partition (polygon), perform triangulation using the line-sweep (plane-sweep) algorithm.

4. Obtain dual graph of triangulated polygon

5. Find the minimum vertex guards required to cover the entire polygon.</param.description>
    <param.screenshot>${PROJECT_ROOT}\loading.png</param.screenshot>
    <param.guid />
    <param.installpath.string>\IITR\PolyDigger\</param.installpath.string>
    <param.installpath.combo>option.installpath.programfiles</param.installpath.combo>
    <param.logo>${PROJECT_ROOT}\cg_mini.png</param.logo>
    <param.install.notes />
    <param.target.install.notes />
    <param.intermediate>${PROJECT_ROOT}\PolyDigger\for_testing</param.intermediate>
    <param.files.only>${PROJECT_ROOT}\PolyDigger\for_redistribution_files_only</param.files.only>
    <param.output>${PROJECT_ROOT}\PolyDigger\for_redistribution</param.output>
    <param.enable.clean.build>false</param.enable.clean.build>
    <param.user.defined.mcr.options />
    <param.embed.ctf>true</param.embed.ctf>
    <param.target.type>subtarget.standalone</param.target.type>
    <param.support.packages />
    <param.required.mcr.products>
      <item>35000</item>
      <item>35010</item>
      <item>35001</item>
    </param.required.mcr.products>
    <param.web.mcr>true</param.web.mcr>
    <param.package.mcr>true</param.package.mcr>
    <param.no.mcr>false</param.no.mcr>
    <param.web.mcr.name>PolyDiggerInstaller_web</param.web.mcr.name>
    <param.package.mcr.name>PolyDiggerInstaller_mcr</param.package.mcr.name>
    <param.no.mcr.name>MyAppInstaller_app</param.no.mcr.name>
    <param.windows.command.prompt>true</param.windows.command.prompt>
    <param.create.log>false</param.create.log>
    <param.log.file />
    <unset>
      <param.version />
      <param.guid />
      <param.installpath.string />
      <param.installpath.combo />
      <param.target.install.notes />
      <param.intermediate />
      <param.files.only />
      <param.output />
      <param.enable.clean.build />
      <param.user.defined.mcr.options />
      <param.embed.ctf />
      <param.target.type />
      <param.support.packages />
      <param.web.mcr />
      <param.no.mcr />
      <param.no.mcr.name />
      <param.windows.command.prompt />
      <param.create.log />
      <param.log.file />
    </unset>
    <fileset.main>
      <file>${PROJECT_ROOT}\PolyDigger.m</file>
    </fileset.main>
    <fileset.resources>
      <file>${PROJECT_ROOT}\cg_mini.png</file>
    </fileset.resources>
    <fileset.package>
      <file>${PROJECT_ROOT}\cg_mini.png</file>
      <file>${PROJECT_ROOT}\loading.png</file>
    </fileset.package>
    <fileset.depfun>
      <file>${PROJECT_ROOT}\PolyDigger.fig</file>
    </fileset.depfun>
    <build-deliverables>
      <file location="${PROJECT_ROOT}\PolyDigger\for_testing" name="PolyDigger.exe" optional="false">D:\Matlab\PolyDigger\PolyDigger\for_testing\PolyDigger.exe</file>
      <file location="${PROJECT_ROOT}\PolyDigger\for_testing" name="readme.txt" optional="true">D:\Matlab\PolyDigger\PolyDigger\for_testing\readme.txt</file>
      <file location="${PROJECT_ROOT}\PolyDigger\for_testing" name="splash.png" optional="false">D:\Matlab\PolyDigger\PolyDigger\for_testing\splash.png</file>
    </build-deliverables>
    <workflow />
    <matlab>
      <root>C:\Program Files\MATLAB\R2015b</root>
      <toolboxes />
    </matlab>
    <platform>
      <unix>false</unix>
      <mac>false</mac>
      <windows>true</windows>
      <win2k>false</win2k>
      <winxp>false</winxp>
      <vista>false</vista>
      <linux>false</linux>
      <solaris>false</solaris>
      <osver>6.2</osver>
      <os32>false</os32>
      <os64>true</os64>
      <arch>win64</arch>
      <matlab>true</matlab>
    </platform>
  </configuration>
</deployment-project>